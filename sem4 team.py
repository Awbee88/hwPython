# 1. Задайте список из нескольких чисел. Напишите программу, которая найдёт сумму элементов списка, стоящих на нечётной позиции.

# *Пример:*
# - [2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ: 12

# a = [2, 3, 5, 9, 3]
# total = 0
# for i in a[1:len(a)+1:2]:
#     total += i
# print(total)


# 2. Напишите программу, которая найдёт произведение пар чисел списка. Парой считаем первый и последний элемент, второй и предпоследний и т.д.

# *Пример:*
# - [2, 3, 4, 5, 6] => [12, 15, 16];
# - [2, 3, 5, 6] => [12, 15]

# a = [2, 3, 4, 5, 6]
# b = []
# c = -(-len(a)//2)
# for i in range(c):
#     b.append(a[i]*a[-1-i])
# print(b)


# 3. Задайте список из вещественных чисел. Напишите программу, которая найдёт разницу между максимальным и минимальным значением дробной части элементов.

# *Пример:*
# - [1.1, 1.2, 3.1, 5, 10.01] => 0.19

# a = [1.1, 1.2, 3.1, 5, 10.01]
# for i in range(len(a)):
#     a[i] = a[i]-round(a[i])
# if 0 in a:
#     a.remove(0)
# total = round(max(a),2)-round(min(a),2)
# print(total)


# 4. Напишите программу, которая будет преобразовывать десятичное число в двоичное.

# *Пример:*
# - 45 -> 101101
# - 3 -> 11
# - 2 -> 10

# n = int(input('Input number: '))
# a =[]
# while n != 0:
#     a.append(n%2)
#     n//=2
# for i in a:
#     print(i, end='')



# 5. Задайте число. Составьте список чисел Фибоначчи, в том числе для отрицательных индексов.

# *Пример:*
# - для k = 8 список будет выглядеть так: [-21 ,13, -8, 5, −3, 2, −1, 1, 0, 1,

'''
n = int(input('Input your number: '))
a = 0
b = 1
fibo1 = []
for i in range(n):
    a,b = b, a+b
    fibo1.append(a)   

a = 0
b = 1
fibo2 = []
for i in range(n):
    a,b = b, a-b
    fibo2.append(a)
fibo2.reverse()

print(fibo2 + fibo1)
'''

# 1. Задайте строку из набора чисел. Напишите программу, которая покажет большее и меньшее число. В качестве символа-разделителя используйте пробел.
from hashlib import new


n = '1 23 45 643 234 5'
nums = n.split(' ')
new_n = []
for i in nums:
    new_n.append(int(i))

print(max(new_n))
print(min(new_n))


# 2. Найдите корни квадратного уравнения Ax² + Bx + C = 0 двумя способами:

# 1) с помощью математических формул нахождения корней квадратного уравнения

# 2) с помощью дополнительных библиотек Python



# 3. Задайте два числа. Напишите программу, которая найдёт НОК (наименьшее общее кратное) этих двух чисел.